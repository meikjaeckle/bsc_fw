; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;[common]
;custom_prog_version = "\"0.4.20\""

; NOTE:
; the compiler flag "-Wno-volatile" suppress the warning "warning: compound assignment with 'volatile'-qualified left operand is deprecated [-W-no-volatile]"
; This warning was introduce in C++20 bit will be reverted in C++23.
[bsc_common]
build_flags =
  -std=gnu++2a
  -std=gnu11
  -Wno-volatile ;suppress the warning "warning: compound assignment with 'volatile'-qualified left operand is deprecated [-W-no-volatile]"
build_unflags =
  -std=gnu++11
  -std=gnu99
;platform = https://github.com/tasmota/platform-espressif32/releases/download/2022.12.0/platform-espressif32.zip
;platform = platformio/espressif32@~6.5.0
;platform = https://github.com/platformio/platform-espressif32.git
;platform = https://github.com/tasmota/platform-espressif32/releases/download/2024.01.11/platform-espressif32.zip
platform = https://github.com/sgryphon/platform-espressif32.git#sgryphon/add-esp32-arduino-libs
;platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.14
;platform_packages = espressif/toolchain-xtensa-esp32@~12.2.0
platform_packages =
    platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
    platformio/framework-arduinoespressif32-libs @ https://github.com/espressif/esp32-arduino-libs.git#idf-release/v5.1
board = esp32dev
framework = arduino
;framework = espidf
lib_deps =
  https://github.com/meikjaeckle/ESP32-TWAI#refactor-twai-driver
  https://github.com/PaulStoffregen/OneWire.git

[env:bsc]
platform = ${bsc_common.platform}
board = ${bsc_common.board}
framework = ${bsc_common.framework}
platform_packages = ${bsc_common.platform_packages}
lib_deps =
	${bsc_common.lib_deps}
monitor_speed = 115200
monitor_filters =
	esp32_exception_decoder
	colorize
board_build.flash_size = 16MB
board_build.partitions = default_bsc.csv

extra_scripts =
	pre:scripts/prebuild_parameter.py
	;post:scripts/postbuild_bin.py

build_flags =
  ${bsc_common.build_flags}
  -L lib_precompiled
  -lwebapp2
  -fexceptions
  ;-DBSC_SW_VERSION=${common.custom_prog_version}
  -DBSC_SW_SPEZIAL="\"\""
  -DDEBUG_ON_FS
  -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG
  -DLOG_LOCAL_LEVEL_BSC=ESP_LOG_DEBUG

build_unflags =
  ${bsc_common.build_unflags}
  -fno-exceptions
  -DDEBUG_ON_HW_SERIAL


[env:bsc_hw_log]
platform = ${bsc_common.platform}
board = ${bsc_common.board}
framework = ${bsc_common.framework}
platform_packages = ${bsc_common.platform_packages}
lib_deps =
	${bsc_common.lib_deps}
monitor_speed = 115200
monitor_filters =
	esp32_exception_decoder
	colorize
	;log2file
board_build.flash_size = 16MB
board_build.partitions = default_bsc.csv

;debug_tool = jlink
;upload_protocol = jlink
;upload_protocol = jlink-jtag

extra_scripts =
	pre:scripts/prebuild_parameter.py
	;post:scripts/postbuild_bin.py

build_flags =
  ${bsc_common.build_flags}
  -L lib_precompiled
  -llibwebapp2_serial_log
  -fexceptions
  ;-DBSC_SW_VERSION=${common.custom_prog_version}
  -DBSC_SW_SPEZIAL="\"SERIAL_LOG\""
  -DDEBUG_ON_HW_SERIAL
  -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG
  -DLOG_LOCAL_LEVEL_BSC=ESP_LOG_DEBUG
  ;-DCORE_DEBUG_LEVEL=5
  ;-DCOMPILE_UNIX_TIME=$UNIX_TIME

build_unflags =
  ${bsc_common.build_unflags}
  -fno-exceptions
  -DDEBUG_ON_FS
